Cses Sheet
-x-x-x-x-x-x--x-x-x-x-x-x--x-x-x-x-x-x-x--x-x-x-x-x-x--x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-
1-Weird Algorithm
public static void main(String[] args) {
		FastReader in= new FastReader();
		long t= in.nextInt();
		System.out.println(t+" ");
		long x;
		while(t!=1) {
			if(t%2==0) {
				 x =even(t);
				System.out.println(x);
				
			}
			else {
				 x=odd(t);
				System.out.println(x);
			
			}
			t=x;
		}
		
	}
	public static long even(long x) {
		return x/2;
	}
	public static long odd (long x) {
		return (x*3)+1;
	}
	
  
  
  
  -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x--x-x-x-x-x-x-x-x-x-x-x-x
  2---> Missing Number
  try taking long to submit it
  
  public static void main(String[] args) {
		FastReader in= new FastReader();
		int n = in.nextInt();
		int a[] = new int [n-1];
		long sum=0;
		for(int i =0;i<n-1;i++) {
			a[i]=in.nextInt();
			sum+=a[i];		
		}
		long y = n*(n+1)/2;
		System.out.println(y-sum);
	}
  
  
  
  -x-x-x-x-x-x--x-x-x-x-x-x--x-x-x-x-x--x-x-x-x-x-x--x-x-x-x--x-x-x-x-x-x--x-x-x-x-x--x-x-x-x-x-x-x-x-x--x-x
  
  3--> Repititions
  
  
  public static void main(String[] args) {
		FastReader in= new FastReader();
		String s = in.nextLine();
		int max=1;
		int curr=1;
		for(int i=0;i<s.length()-1;i++) {
			if(s.charAt(i)==s.charAt(i+1)) curr++;
			if(s.charAt(i)!=s.charAt(i+1)) curr=1;
			max=Math.max(curr, max);
		}
//		if(s.charAt(s.length()-2)==s.charAt(s.length()-1)) max++;
		System.out.println(max==0? 1: max);
	}
	
  
  
  
  
  -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x
  
  4---> Increasing Array
  
  public static void main(String[] args) {
		FastReader in = new FastReader();
		
			int n = in.nextInt();
			int a[]= in.readintarray(n);
			long sum=0;
			for(int i =1;i<n;i++) {
				if(a[i]<a[i-1]) {
					sum+=a[i-1]-a[i];
					a[i]=a[i-1];
				}
			}
//			for(int i =0;i<n;i++) System.out.println(a[i]);
			System.out.println(sum);
		
 
	}
	
	
  
  
-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x
5--> Permutations(wont submit coz java is slow)


public static void main(String[] args) {
		FastReader in = new FastReader();
		
			int n = in.nextInt();
//			int a[]= new int[n];
			if(n==1) System.out.println(1);;
			if(n==2||n==3) System.out.println("NO SOLUTION");
			if(n==4) System.out.println("2 4 1 3");
			else {
				if(n%2==0) {
					for(int i =2;i<=n;i+=2)
						System.out.print(i+" ");
					for(int i =1;i<n;i+=2)
						System.out.print(i+" ");
				
				
				}
				else {
					for(int i =2;i<n;i+=2)System.out.print(i+" ");
					for(int i=1;i<=n;i+=2) System.out.print(i+" ");
					
				}
			}
				
 
	}
	
-x-x-x-x-x-x-x--x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x--x-x-x-x-x-x-x-x--x-x-x-x-x-x-x-x-x-x-x

6---> Number spiral

Try thinking about it its pretty hard think directly


public static void main(String[] args) {
		FastReader in = new FastReader();
		
//			int n = in.nextInt();
			int t = in.nextInt();
			while(t-->0) {
				int x = in.nextInt();
				int y = in.nextInt();
				long z = Math.max(x, y);
				long z2 = (z-1)*(z-1),ans=0;
				if(z%2==0) {
					if(y==z) {
						ans=z2+x;
					}
					else {
						ans = z2+2*z-y;
					}
				}
				else {
					if(x==z) {
						ans=z2+y;
					}
					else {
						ans = z2+2*z-x;
					}
	
				}
				System.out.println(ans);
				
			}
 
	}
	
	
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x

7---> Two Knights Not sure why is this wrong though



public static void main(String[] args) {
		FastReader in = new FastReader();
		
//			int n = in.nextInt();
			long t = in.nextLong();
			for(int i =1;i<=t;i++) {
				if(i==2) System.out.println(6);
				if(i==1) System.out.println(0);
				if(i>2) {
					long ans = i*i*(i*i-1)/2;
					long finala =ans-4*(i-1)*(i-2);
					System.out.println(finala);
				}
				
				
			}
 
	}
	
	
x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x	

